/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Output, Input, ViewEncapsulation } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { CardValidator } from './validator/card-validator';
import { PaymentCardService } from './service/payment-card.service';
/**
 * NgPaymentCard without any dependencies other then ReactiveFormsModule
 */
var PaymentCardComponent = /** @class */ (function () {
    function PaymentCardComponent(_ccService, _fb) {
        this._ccService = _ccService;
        this._fb = _fb;
        /**
         * List of months
         */
        this.months = [];
        /**
         * List of years
         */
        this.years = [];
        /**
         * Validation message for missing payment card number
         */
        this.ccNumMissingTxt = 'Card number is required';
        /**
         * Validation message for too short payment card number
         */
        this.ccNumTooShortTxt = 'Card number is too short';
        /**
         * Validation message for too long payment card number
         */
        this.ccNumTooLongTxt = 'Card number is too long';
        /**
         * Validation message for payment card number that contains characters other than digits
         */
        this.ccNumContainsLettersTxt = 'Card number can contain digits only';
        /**
         * Validation message for invalid payment card  number (Luhn's validation)
         */
        this.ccNumChecksumInvalidTxt = 'Provided card number is invalid';
        /**
         * Validation message for missing card holder name
         */
        this.cardHolderMissingTxt = 'Card holder name is required';
        /**
         * Validation message for too long card holder name
         */
        this.cardHolderTooLongTxt = 'Card holder name is too long';
        /**
         * Validation message for missing expiration month
         */
        this.expirationMonthMissingTxt = 'Expiration month is required';
        /**
         * Validation message for missing expiration year
         */
        this.expirationYearMissingTxt = 'Expiration year is required';
        /**
         * Validation message for missing CCV number
         */
        this.ccvMissingTxt = 'CCV number is required';
        /**
         * Validation message for too short CCV number
         */
        this.ccvNumTooShortTxt = 'CCV number is too short';
        /**
         * Validation message for too long CCV number
         */
        this.ccvNumTooLongTxt = 'CCV number is too long';
        /**
         * Validation message for incorrect CCV number containing characters other than digits
         */
        this.ccvContainsLettersTxt = 'CCV number can contain digits only';
        /**
         * Validation message for expired card
         */
        this.cardExpiredTxt = 'Card has expired';
        /**
         * Switch validation of the payment card number
         */
        this.validateCCNum = true;
        /**
         * Switch validation of the payment card holder
         */
        this.validateCardHolder = true;
        /**
         * Switch validation of the payment card expiration month
         */
        this.validateExpirationMonth = true;
        /**
         * Switch validation of the payment card expiration year
         */
        this.validateExpirationYear = true;
        /**
         * Switch validation of the payment card expiration
         */
        this.validateCardExpiration = true;
        /**
         * Switch validation of the payment card CCV number
         */
        this.validateCCV = true;
        /**
         * EventEmitter for payment card object
         */
        this.formSaved = new EventEmitter();
    }
    /**
     * @return {?}
     */
    PaymentCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.buildForm();
        this.assignDateValues();
    };
    /**
     * Populate months and years
     */
    /**
     * Populate months and years
     * @return {?}
     */
    PaymentCardComponent.prototype.assignDateValues = /**
     * Populate months and years
     * @return {?}
     */
    function () {
        this.months = PaymentCardService.getMonths();
        this.years = PaymentCardService.getYears();
    };
    /**
     * Build reactive form
     */
    /**
     * Build reactive form
     * @return {?}
     */
    PaymentCardComponent.prototype.buildForm = /**
     * Build reactive form
     * @return {?}
     */
    function () {
        this.ccForm = this._fb.group({
            cardNumber: [
                '',
                Validators.compose([
                    Validators.required,
                    Validators.minLength(12),
                    Validators.maxLength(19),
                    CardValidator.numbersOnly,
                    CardValidator.checksum,
                ]),
            ],
            cardHolder: ['', Validators.compose([Validators.required, Validators.maxLength(22)])],
            expirationMonth: ['', Validators.required],
            expirationYear: ['', Validators.required],
            ccv: [
                '',
                Validators.compose([
                    Validators.required,
                    Validators.minLength(3),
                    Validators.maxLength(4),
                    CardValidator.numbersOnly,
                ]),
            ],
        }, {
            validator: CardValidator.expiration,
        });
    };
    /**
     * Returns payment card type based on payment card number
     */
    /**
     * Returns payment card type based on payment card number
     * @param {?} ccNum
     * @return {?}
     */
    PaymentCardComponent.prototype.getCardType = /**
     * Returns payment card type based on payment card number
     * @param {?} ccNum
     * @return {?}
     */
    function (ccNum) {
        return PaymentCardService.getCardType(ccNum);
    };
    /**
     * Callback function that emits payment card details after user clicks submit, or press enter
     */
    /**
     * Callback function that emits payment card details after user clicks submit, or press enter
     * @return {?}
     */
    PaymentCardComponent.prototype.emitSavedCard = /**
     * Callback function that emits payment card details after user clicks submit, or press enter
     * @return {?}
     */
    function () {
        /** @type {?} */
        var cardDetails = (/** @type {?} */ (this.ccForm.value));
        this.formSaved.emit(cardDetails);
    };
    PaymentCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-payment-card',
                    template: "<section class=\"cc-wrapper\">\r\n  <div class=\"cc-box\">\r\n    <div #ccBoxFlip class=\"cc-box--flip\">\r\n      <div class=\"cc-box__front\">\r\n        <div class=\"cc-box__logo\">\r\n          <p>{{getCardType(ccNumber.value) | uppercase}}</p>\r\n        </div>\r\n        <div class=\"cc-box__element\">\r\n          <label class=\"cc-form__label\" for=\"cc-card-number-display\"></label>\r\n          <input class=\"cc-form__input cc-form__input--transparent cc-form__input--embosed\" id=\"cc-card-number-display\"\r\n                 aria-label=\"Payment card number\" disabled=\"disabled\"\r\n                 [value]=\"ccForm.get('cardNumber').value | paymentCardNumber\">\r\n        </div>\r\n        <div class=\"cc-box__element\">\r\n          <label class=\"cc-form__label\" for=\"cc-holder-display\">CARD HOLDER</label>\r\n          <input class=\"cc-form__input cc-form__input--transparent cc-form__input--embosed\" id=\"cc-holder-display\"\r\n                 aria-label=\"Card holder\" disabled=\"disabled\" [value]=\"ccForm.get('cardHolder').value | uppercase\">\r\n        </div>\r\n        <div class=\"cc-box__element\">\r\n          <label class=\"cc-form__label\" for=\"cc-valid-date-display\">VALID THRU</label>\r\n          <input class=\"cc-form__input cc-form__input--left-align cc-form__input--transparent cc-form__input--embosed\"\r\n                 id=\"cc-valid-date-display\" aria-label=\"Card holder\" disabled=\"disabled\"\r\n                 [value]=\"ccForm.get('expirationMonth').value + '/' + ccForm.get('expirationYear').value | validThru\">\r\n        </div>\r\n        <div class=\"cc-box__chip\"></div>\r\n      </div>\r\n      <div class=\"cc-box__back\">\r\n        <div class=\"cc-box__strip\">&nbsp;</div>\r\n        <div class=\"cc-box__element\">\r\n          <input class=\"cc-form__input cc-form__input--cursive cc-form__input--right-align\" id=\"cc-ccv-display\"\r\n                 aria-label=\"CCV\" disabled=\"disabled\"\r\n                 [value]=\"'CCV: ' + ccForm.get('ccv').value\" title=\"CCV\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <form class=\"cc-form\" [formGroup]=\"ccForm\" autocomplete=\"off\">\r\n    <div class=\"cc-form__wrapper--long\">\r\n      <label for=\"cc-number\" class=\"cc-form__label cc-form__label--first\">Card number</label>\r\n      <input #ccNumber class=\"cc-form__input\" id=\"cc-number\" aria-label=\"Card number\"\r\n             type=\"text\" title=\"Card number\" maxlength=\"19\" formControlName=\"cardNumber\"\r\n             (focus)=\"ccBoxFlip.classList.remove('hover')\">\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('required')\">\r\n        {{ccNumMissingTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('minlength')\">\r\n        {{ccNumTooShortTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('maxlength')\">\r\n        {{ccNumTooLongTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('numbersOnly')\">\r\n        {{ccNumContainsLettersTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('checksum')\">\r\n        {{ccNumChecksumInvalidTxt}}\r\n      </div>\r\n    </div>\r\n    <div class=\"cc-form__wrapper--long\">\r\n      <label for=\"cc-holder-name\" class=\"cc-form__label\">Card Holder name</label>\r\n      <input class=\"cc-form__input\" id=\"cc-holder-name\" aria-label=\"Card holder name\" type=\"text\"\r\n             title=\"Card holder name\" maxlength=\"22\" formControlName=\"cardHolder\"\r\n             (focus)=\"ccBoxFlip.classList.remove('hover')\">\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCardHolder && ccForm.get('cardHolder').touched &&\r\n           ccForm.get('cardHolder').hasError('required')\">\r\n        {{cardHolderMissingTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCardHolder && ccForm.get('cardHolder').touched &&\r\n           ccForm.get('cardHolder').hasError('maxlength')\">\r\n        {{cardHolderTooLongTxt}}\r\n      </div>\r\n    </div>\r\n    <div class=\"cc-form--inline\">\r\n      <div class=\"cc-form__wrapper cc-form__wrapper--short\">\r\n        <label for=\"cc-expiration-month\" class=\"cc-form__label\">Expiration month</label>\r\n        <select id=\"cc-expiration-month\" class=\"cc-form__select\" aria-label=\"Expiration month\"\r\n                formControlName=\"expirationMonth\">\r\n          <option *ngFor=\"let month of months\" value=\"{{month}}\"\r\n                  (click)=\"ccBoxFlip.classList.remove('hover')\">{{month}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"cc-form__wrapper cc-form__wrapper--short\">\r\n        <label for=\"cc-expiration-year\" class=\"cc-form__label\">Expiration year</label>\r\n        <select id=\"cc-expiration-year\" class=\"cc-form__select\" aria-label=\"Expiration year\"\r\n                formControlName=\"expirationYear\">\r\n          <option *ngFor=\"let year of years\" value=\"{{year}}\"\r\n                  (click)=\"ccBoxFlip.classList.remove('hover')\">{{year}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"cc-form__wrapper cc-form__wrapper--short cc-form__wrapper--last\">\r\n        <label for=\"cc-ccv\" class=\"cc-form__label\">ccv</label>\r\n        <input class=\"cc-form__input cc-form__input--short\" id=\"cc-ccv\" aria-label=\"CCV\" type=\"text\" title=\"CCV\"\r\n               minlength=\"3\" maxlength=\"4\" formControlName=\"ccv\" (focus)=\"ccBoxFlip.classList.add('hover')\">\r\n      </div>\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateExpirationMonth && ccForm.get('expirationMonth').touched &&\r\n             ccForm.get('expirationMonth').hasError('required')\">\r\n      {{expirationMonthMissingTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateExpirationMonth && ccForm.get('expirationYear').touched &&\r\n             ccForm.get('expirationYear').hasError('required')\">\r\n      {{expirationYearMissingTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\" *ngIf=\"validateCardExpiration && ccForm.get('expirationMonth').touched &&\r\n    ccForm.get('expirationYear').touched && ccForm.hasError('expiration')\">\r\n      {{cardExpiredTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('required')\">\r\n      {{ccvMissingTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('minlength')\">\r\n      {{ccvNumTooShortTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('maxlength')\">\r\n      {{ccvNumTooLongTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('numbersOnly')\">\r\n      {{ccvContainsLettersTxt}}\r\n    </div>\r\n    <button type=\"submit\" class=\"cc-form__button cc-form__button--ripple\" aria-label=\"submit\" (click)=\"emitSavedCard()\"\r\n            (keydown.enter)=\"emitSavedCard()\">Submit\r\n    </button>\r\n  </form>\r\n</section>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["@import url(https://fonts.googleapis.com/css?family=Inconsolata);.cc-form{align-items:center;display:flex;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}@media only screen and (max-width:1279px){.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}}@media only screen and (max-width:599px){.cc-form--inline{align-items:center;display:inherit;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}}input[type=number]{-moz-appearance:textfield}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}@media only screen and (max-width:1919px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%;margin-top:30px}}@media only screen and (max-width:1279px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%}}@media only screen and (max-width:599px){.cc-form__wrapper{margin-right:0;margin-top:0}.cc-form__wrapper--long,.cc-form__wrapper--short{width:80%}.cc-form__wrapper--last{margin-left:0;margin-right:0}}.cc-form__label{color:rgba(0,0,0,.6);display:block;font-family:Inconsolata,Serif,serif;font-size:.7em;font-weight:400;letter-spacing:1px;line-height:10px;margin-bottom:5px;margin-top:5%;text-align:left;text-shadow:none;text-transform:uppercase;width:100%}.cc-form__label--first{margin-top:20%}.cc-form__select{-webkit-appearance:listbox;-moz-appearance:listbox;appearance:listbox}.cc-form__input,.cc-form__select{border:1px solid rgba(0,0,0,.3);border-radius:5px;box-shadow:inset 0 1px 4px rgba(0,0,0,.2);color:#333;display:block;font-size:1.2em;height:38px;margin:0;outline:0;padding:0;text-align:left;width:100%}.cc-form__input--transparent{background:0 0;border:none;border-radius:0;box-shadow:none}.cc-form__input--embosed{color:#fff;font-family:Inconsolata,monospace;font-size:2vw;text-shadow:0 2px 1px rgba(0,0,0,.3)}@media only screen and (max-width:1279px){.cc-form__input--embosed{font-size:2.5vw}}@media only screen and (max-width:599px){.cc-form__input--embosed{font-size:3vw}}.cc-form__input--cursive{font-size:.7em;font-style:italic;left:0;margin:0 auto;position:absolute}.cc-form__input--right-align{padding-right:5%;text-align:right}.cc-form__input--left-align{text-align:left}.cc-form__input:focus,.cc-form__select:focus{border-color:#41acf4}.cc-form__error{color:#ff5b5f;font-size:.7em}.cc-form__button{background:#41acf4;border:0;border-radius:3px;color:#fff;cursor:pointer;margin-bottom:5%;margin-top:1%;outline:0;overflow:hidden;padding:1%;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;white-space:nowrap;width:60%}.cc-form__button:hover{box-shadow:0 6px 8px -3px rgba(0,0,0,.3)}.cc-form__button:focus{background:#0e91ea}.cc-form__button--ripple{overflow:hidden;position:relative}.cc-form__button--ripple:after{background:rgba(255,255,255,.3);border-radius:80%;content:'';display:block;height:120px;left:50%;margin-left:-50%;margin-top:-60px;position:absolute;top:50%;-webkit-transform:scale(0);transform:scale(0);width:100%}.cc-form__button--ripple:not(:active):after{-webkit-animation:2s ease-out button-ripple;animation:2s ease-out button-ripple}@-webkit-keyframes button-ripple{0%{-webkit-transform:scale(0);transform:scale(0)}20%{-webkit-transform:scale(1);transform:scale(1)}100%{opacity:0;-webkit-transform:scale(1);transform:scale(1)}}@keyframes button-ripple{0%{-webkit-transform:scale(0);transform:scale(0)}20%{-webkit-transform:scale(1);transform:scale(1)}100%{opacity:0;-webkit-transform:scale(1);transform:scale(1)}}.cc-wrapper{background-color:#fff;border-radius:20px;height:100%;margin:0;padding:0;width:100%}.cc-box{height:100px;margin:0 auto;padding:0;position:relative;-webkit-transform:translateY(-100%);transform:translateY(-100%);width:70%;z-index:1}@media only screen and (max-width:1279px){.cc-box{-webkit-transform:translateY(-115%);transform:translateY(-115%)}}@media only screen and (max-width:599px){.cc-box{-webkit-transform:translateY(-130%);transform:translateY(-130%)}}.cc-box--flip{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;transition:.6s}.cc-box--flip.hover,.cc-box--flip:hover{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.cc-box__element{padding:0;width:80%}.cc-box__logo{align-items:center;color:#fff;display:flex;flex-flow:row nowrap;font-size:1.2em;font-style:italic;font-weight:700;justify-content:flex-end;margin-right:10%;width:100%}.cc-box__strip{background:linear-gradient(135deg,#404040,#1a1a1a);font-size:1.7em;margin:0;padding:0;position:relative;-webkit-transform:translateY(-90%);transform:translateY(-90%);width:100%}.cc-box__back,.cc-box__front{align-items:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;background:linear-gradient(135deg,#bd6772,#53223f);border-radius:15px;display:flex;flex-direction:column;flex-flow:column nowrap;height:250px;justify-content:center;left:0;position:absolute;top:0;width:100%}.cc-box__front{-webkit-transform:rotateY(0);transform:rotateY(0)}.cc-box__back{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.ng-invalid.ng-touched{border-color:#ff5b5f}.ng-valid.ng-touched{border-color:#b2b2b2}"]
                }] }
    ];
    /** @nocollapse */
    PaymentCardComponent.ctorParameters = function () { return [
        { type: PaymentCardService },
        { type: FormBuilder }
    ]; };
    PaymentCardComponent.propDecorators = {
        ccNumMissingTxt: [{ type: Input }],
        ccNumTooShortTxt: [{ type: Input }],
        ccNumTooLongTxt: [{ type: Input }],
        ccNumContainsLettersTxt: [{ type: Input }],
        ccNumChecksumInvalidTxt: [{ type: Input }],
        cardHolderMissingTxt: [{ type: Input }],
        cardHolderTooLongTxt: [{ type: Input }],
        expirationMonthMissingTxt: [{ type: Input }],
        expirationYearMissingTxt: [{ type: Input }],
        ccvMissingTxt: [{ type: Input }],
        ccvNumTooShortTxt: [{ type: Input }],
        ccvNumTooLongTxt: [{ type: Input }],
        ccvContainsLettersTxt: [{ type: Input }],
        cardExpiredTxt: [{ type: Input }],
        validateCCNum: [{ type: Input }],
        validateCardHolder: [{ type: Input }],
        validateExpirationMonth: [{ type: Input }],
        validateExpirationYear: [{ type: Input }],
        validateCardExpiration: [{ type: Input }],
        validateCCV: [{ type: Input }],
        formSaved: [{ type: Output }]
    };
    return PaymentCardComponent;
}());
export { PaymentCardComponent };
if (false) {
    /**
     * FormGroup available publicly
     * @type {?}
     */
    PaymentCardComponent.prototype.ccForm;
    /**
     * List of months
     * @type {?}
     */
    PaymentCardComponent.prototype.months;
    /**
     * List of years
     * @type {?}
     */
    PaymentCardComponent.prototype.years;
    /**
     * Validation message for missing payment card number
     * @type {?}
     */
    PaymentCardComponent.prototype.ccNumMissingTxt;
    /**
     * Validation message for too short payment card number
     * @type {?}
     */
    PaymentCardComponent.prototype.ccNumTooShortTxt;
    /**
     * Validation message for too long payment card number
     * @type {?}
     */
    PaymentCardComponent.prototype.ccNumTooLongTxt;
    /**
     * Validation message for payment card number that contains characters other than digits
     * @type {?}
     */
    PaymentCardComponent.prototype.ccNumContainsLettersTxt;
    /**
     * Validation message for invalid payment card  number (Luhn's validation)
     * @type {?}
     */
    PaymentCardComponent.prototype.ccNumChecksumInvalidTxt;
    /**
     * Validation message for missing card holder name
     * @type {?}
     */
    PaymentCardComponent.prototype.cardHolderMissingTxt;
    /**
     * Validation message for too long card holder name
     * @type {?}
     */
    PaymentCardComponent.prototype.cardHolderTooLongTxt;
    /**
     * Validation message for missing expiration month
     * @type {?}
     */
    PaymentCardComponent.prototype.expirationMonthMissingTxt;
    /**
     * Validation message for missing expiration year
     * @type {?}
     */
    PaymentCardComponent.prototype.expirationYearMissingTxt;
    /**
     * Validation message for missing CCV number
     * @type {?}
     */
    PaymentCardComponent.prototype.ccvMissingTxt;
    /**
     * Validation message for too short CCV number
     * @type {?}
     */
    PaymentCardComponent.prototype.ccvNumTooShortTxt;
    /**
     * Validation message for too long CCV number
     * @type {?}
     */
    PaymentCardComponent.prototype.ccvNumTooLongTxt;
    /**
     * Validation message for incorrect CCV number containing characters other than digits
     * @type {?}
     */
    PaymentCardComponent.prototype.ccvContainsLettersTxt;
    /**
     * Validation message for expired card
     * @type {?}
     */
    PaymentCardComponent.prototype.cardExpiredTxt;
    /**
     * Switch validation of the payment card number
     * @type {?}
     */
    PaymentCardComponent.prototype.validateCCNum;
    /**
     * Switch validation of the payment card holder
     * @type {?}
     */
    PaymentCardComponent.prototype.validateCardHolder;
    /**
     * Switch validation of the payment card expiration month
     * @type {?}
     */
    PaymentCardComponent.prototype.validateExpirationMonth;
    /**
     * Switch validation of the payment card expiration year
     * @type {?}
     */
    PaymentCardComponent.prototype.validateExpirationYear;
    /**
     * Switch validation of the payment card expiration
     * @type {?}
     */
    PaymentCardComponent.prototype.validateCardExpiration;
    /**
     * Switch validation of the payment card CCV number
     * @type {?}
     */
    PaymentCardComponent.prototype.validateCCV;
    /**
     * EventEmitter for payment card object
     * @type {?}
     */
    PaymentCardComponent.prototype.formSaved;
    /** @type {?} */
    PaymentCardComponent.prototype._ccService;
    /** @type {?} */
    PaymentCardComponent.prototype._fb;
}
//# sourceMappingURL=data:application/json;base64,