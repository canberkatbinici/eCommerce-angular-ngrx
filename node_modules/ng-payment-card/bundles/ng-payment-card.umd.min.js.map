{"version":3,"sources":["ng://ng-payment-card/lib/validator/card-validator.ts","node_modules/tslib/tslib.es6.js","ng://ng-payment-card/lib/domain/card-type.enum.ts","ng://ng-payment-card/lib/domain/card-types.ts","ng://ng-payment-card/lib/domain/month.enum.ts","ng://ng-payment-card/lib/service/payment-card.service.ts","ng://ng-payment-card/lib/payment-card.component.ts","ng://ng-payment-card/lib/pipe/payment-card-number/payment-card-number.pipe.ts","ng://ng-payment-card/lib/pipe/valid-thru/valid-thru.pipe.ts","ng://ng-payment-card/lib/ng-payment-card.module.ts"],"names":["CardValidator","numbersOnly","abstractCtrl","ccNum","value","RegExp","test","NUMBERS_ONLY_ERR","checksum","abstractCtr","ccNumber","luhnArray","length","sum","shouldMultiply","val","parseInt","charAt","CHECKSUM_INVALID","expiration","formGroup","expirationMonth","Number","get","expirationYear","expirationDate","Date","getTime","CARD_EXPIRED","__values","o","m","Symbol","iterator","i","call","next","done","__read","n","r","e","ar","push","error","CARD_TYPES","Map","set","CardType","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","PaymentCardService","getCardType","_b","tslib_1.__values","Array","from","cardTypes","entries","_c","_d","key","split","join","match","getMonths","months","Object","keys","Month","getYears","years","year","getFullYear","Injectable","PaymentCardComponent","_ccService","_fb","this","ccNumMissingTxt","ccNumTooShortTxt","ccNumTooLongTxt","ccNumContainsLettersTxt","ccNumChecksumInvalidTxt","cardHolderMissingTxt","cardHolderTooLongTxt","expirationMonthMissingTxt","expirationYearMissingTxt","ccvMissingTxt","ccvNumTooShortTxt","ccvNumTooLongTxt","ccvContainsLettersTxt","cardExpiredTxt","validateCCNum","validateCardHolder","validateExpirationMonth","validateExpirationYear","validateCardExpiration","validateCCV","formSaved","EventEmitter","prototype","ngOnInit","buildForm","assignDateValues","ccForm","group","cardNumber","Validators","compose","required","minLength","maxLength","cardHolder","ccv","validator","emitSavedCard","cardDetails","emit","Component","args","selector","template","encapsulation","ViewEncapsulation","None","FormBuilder","Input","Output","PaymentCardNumberPipe","transform","replace","Pipe","name","ValidThruPipe","substr","NgPaymentCardModule","NgModule","imports","ReactiveFormsModule","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["import { AbstractControl, FormGroup, ValidationErrors } from '@angular/forms';\n\n/**\n * Collection of validation methods\n */\nexport class CardValidator {\n  /**\n   * Custom error for alphanumeric input\n   */\n  private static NUMBERS_ONLY_ERR: ValidationErrors = {\n    numbersOnly: true,\n  };\n\n  /**\n   * Custom error for invalid checksum\n   */\n  private static CHECKSUM_INVALID: ValidationErrors = {\n    checksum: true,\n  };\n\n  /**\n   * Custom error for expired card\n   */\n  private static CARD_EXPIRED: ValidationErrors = {\n    expiration: true,\n  };\n\n  /**\n   * Check if control contains numbers only\n   */\n  public static numbersOnly(abstractCtrl: AbstractControl): ValidationErrors | null {\n    const ccNum: string = abstractCtrl.value;\n    const NUMBERS_ONLY: RegExp = new RegExp(/^[0-9]+$/);\n    return !NUMBERS_ONLY.test(ccNum) ? CardValidator.NUMBERS_ONLY_ERR : null;\n  }\n\n  /**\n   * Check checksum number in card number using Luhn algorithm\n   */\n  public static checksum(abstractCtr: AbstractControl): ValidationErrors | null {\n    const ccNumber: string = abstractCtr.value;\n    const luhnArray: Array<number> = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];\n    let length: number = ccNumber ? ccNumber.length : 0;\n    let sum = 0;\n    let shouldMultiply = true;\n\n    while (length) {\n      const val: number = parseInt(ccNumber.charAt(--length), 10);\n      sum += (shouldMultiply = !shouldMultiply) ? luhnArray[val] : val;\n    }\n    return !(sum && sum % 10 === 0) ? CardValidator.CHECKSUM_INVALID : null;\n  }\n\n  /**\n   * Check validity of the card\n   */\n  public static expiration(formGroup: FormGroup): ValidationErrors | null {\n    const expirationMonth: number = Number(formGroup.get('expirationMonth').value);\n    const expirationYear: number = Number(formGroup.get('expirationYear').value);\n    const expirationDate: Date = new Date(expirationYear, expirationMonth + 1, 0);\n    return new Date().getTime() > expirationDate.getTime() ? CardValidator.CARD_EXPIRED : null;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum CardType {\n  AMERICAN_EXPRESS = 'American Express',\n  DINERS = 'Diners',\n  DINERS_CARTE_BLANCHE = 'Diners Carte Blanche',\n  DISCOVER_CLUB = 'Discover Club',\n  CHINA_UNIONPAY = 'China UnionPay',\n  JCB = 'JCB',\n  LASER = 'Laser',\n  MAESTRO = 'Maestro',\n  MASTERCARD = 'Mastercard',\n  VISA_ELECTRON = 'Visa Electron',\n  VISA = 'VISA',\n}\n","import { CardType } from './card-type.enum';\n\nconst CARD_TYPES: Map<string, RegExp> = new Map();\nCARD_TYPES.set(CardType.AMERICAN_EXPRESS, new RegExp('^3[47]'));\nCARD_TYPES.set(CardType.DINERS, new RegExp('^36'));\nCARD_TYPES.set(CardType.DINERS_CARTE_BLANCHE, new RegExp('^30[0-5]'));\nCARD_TYPES.set(\n  CardType.DISCOVER_CLUB,\n  new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)')\n);\nCARD_TYPES.set(CardType.CHINA_UNIONPAY, new RegExp('^(62[0-9]{14,17})$'));\nCARD_TYPES.set(CardType.JCB, new RegExp('^35(2[89]|[3-8][0-9])'));\nCARD_TYPES.set(CardType.LASER, new RegExp('^(6304|6706|6709|6771)[0-9]{12,15}$'));\nCARD_TYPES.set(CardType.MAESTRO, new RegExp('^(50|5[6-8]|6)[0-9]{12,19}$'));\nCARD_TYPES.set(\n  CardType.MASTERCARD,\n  new RegExp('^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$')\n);\nCARD_TYPES.set(CardType.VISA_ELECTRON, new RegExp('^(4026|417500|4508|4844|491([37]))'));\nCARD_TYPES.set(CardType.VISA, new RegExp('^4'));\n\nexport default CARD_TYPES;\nexport type CardTypesContainer = typeof CARD_TYPES;\n","export enum Month {\n  JANUARY = '01',\n  FEBRUARY = '02',\n  MARCH = '03',\n  APRIL = '04',\n  MAY = '05',\n  JUNE = '06',\n  JULY = '07',\n  AUGUST = '08',\n  SEPTEMBER = '09',\n  OCTOBER = '10',\n  NOVEMBER = '11',\n  DECEMBER = '12',\n}\n","import { Injectable } from '@angular/core';\n\nimport { default as CARD_TYPES, CardTypesContainer } from '../domain/card-types';\nimport { Month } from '../domain/month.enum';\n\n@Injectable()\nexport class PaymentCardService {\n  /**\n   * Collection of card types\n   */\n  private static readonly cardTypes: CardTypesContainer = CARD_TYPES;\n\n  /**\n   * Return card type based on card number\n   */\n  public static getCardType(ccNum: string): string | null {\n    for (const [key, val] of Array.from(PaymentCardService.cardTypes.entries())) {\n      if (\n        ccNum\n          .split(new RegExp('[ \\\\-]'))\n          .join('')\n          .match(val)\n      ) {\n        return key;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return months in numerical format\n   */\n  public static getMonths(): Array<Month> {\n    const months: Array<Month> = [];\n    for (const key of Object.keys(Month)) {\n      months.push(Month[key]);\n    }\n    return months;\n  }\n\n  /**\n   * Return years based on current year\n   */\n  public static getYears(): Array<number> {\n    const years: Array<number> = [];\n    const year = new Date().getFullYear();\n    for (let i = -2; i < 5; i++) {\n      years.push(year + i);\n    }\n    return years;\n  }\n}\n","import { Component, EventEmitter, OnInit, Output, Input, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CardValidator } from './validator/card-validator';\nimport { ICardDetails } from './domain/i-card-details';\nimport { CardDetails } from './domain/card-details';\nimport { PaymentCardService } from './service/payment-card.service';\n\n/**\n * NgPaymentCard without any dependencies other then ReactiveFormsModule\n */\n@Component({\n  selector: 'ng-payment-card',\n  templateUrl: './payment-card.component.html',\n  styleUrls: ['./payment-card.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PaymentCardComponent implements OnInit {\n  /**\n   * FormGroup available publicly\n   */\n  public ccForm: FormGroup;\n\n  /**\n   * List of months\n   */\n  public months: Array<string> = [];\n\n  /**\n   * List of years\n   */\n  public years: Array<number> = [];\n\n  /**\n   * Validation message for missing payment card number\n   */\n  @Input()\n  public ccNumMissingTxt? = 'Card number is required';\n\n  /**\n   * Validation message for too short payment card number\n   */\n  @Input()\n  public ccNumTooShortTxt? = 'Card number is too short';\n\n  /**\n   * Validation message for too long payment card number\n   */\n  @Input()\n  public ccNumTooLongTxt? = 'Card number is too long';\n\n  /**\n   * Validation message for payment card number that contains characters other than digits\n   */\n  @Input()\n  public ccNumContainsLettersTxt? = 'Card number can contain digits only';\n\n  /**\n   * Validation message for invalid payment card  number (Luhn's validation)\n   */\n  @Input()\n  public ccNumChecksumInvalidTxt? = 'Provided card number is invalid';\n\n  /**\n   * Validation message for missing card holder name\n   */\n  @Input()\n  public cardHolderMissingTxt? = 'Card holder name is required';\n\n  /**\n   * Validation message for too long card holder name\n   */\n  @Input()\n  public cardHolderTooLongTxt? = 'Card holder name is too long';\n\n  /**\n   * Validation message for missing expiration month\n   */\n  @Input()\n  public expirationMonthMissingTxt? = 'Expiration month is required';\n\n  /**\n   * Validation message for missing expiration year\n   */\n  @Input()\n  public expirationYearMissingTxt? = 'Expiration year is required';\n\n  /**\n   * Validation message for missing CCV number\n   */\n  @Input()\n  public ccvMissingTxt? = 'CCV number is required';\n\n  /**\n   * Validation message for too short CCV number\n   */\n  @Input()\n  public ccvNumTooShortTxt? = 'CCV number is too short';\n\n  /**\n   * Validation message for too long CCV number\n   */\n  @Input()\n  public ccvNumTooLongTxt? = 'CCV number is too long';\n\n  /**\n   * Validation message for incorrect CCV number containing characters other than digits\n   */\n  @Input()\n  public ccvContainsLettersTxt? = 'CCV number can contain digits only';\n\n  /**\n   * Validation message for expired card\n   */\n  @Input()\n  public cardExpiredTxt? = 'Card has expired';\n\n  /**\n   * Switch validation of the payment card number\n   */\n  @Input()\n  public validateCCNum? = true;\n\n  /**\n   * Switch validation of the payment card holder\n   */\n  @Input()\n  public validateCardHolder? = true;\n\n  /**\n   * Switch validation of the payment card expiration month\n   */\n  @Input()\n  public validateExpirationMonth? = true;\n\n  /**\n   * Switch validation of the payment card expiration year\n   */\n  @Input()\n  public validateExpirationYear? = true;\n\n  /**\n   * Switch validation of the payment card expiration\n   */\n  @Input()\n  public validateCardExpiration? = true;\n\n  /**\n   * Switch validation of the payment card CCV number\n   */\n  @Input()\n  public validateCCV? = true;\n\n  /**\n   * EventEmitter for payment card object\n   */\n  @Output()\n  public formSaved: EventEmitter<ICardDetails> = new EventEmitter<CardDetails>();\n\n  constructor(private _ccService: PaymentCardService, private _fb: FormBuilder) {}\n\n  public ngOnInit(): void {\n    this.buildForm();\n    this.assignDateValues();\n  }\n\n  /**\n   * Populate months and years\n   */\n  private assignDateValues(): void {\n    this.months = PaymentCardService.getMonths();\n    this.years = PaymentCardService.getYears();\n  }\n\n  /**\n   * Build reactive form\n   */\n  private buildForm(): void {\n    this.ccForm = this._fb.group(\n      {\n        cardNumber: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(12),\n            Validators.maxLength(19),\n            CardValidator.numbersOnly,\n            CardValidator.checksum,\n          ]),\n        ],\n        cardHolder: ['', Validators.compose([Validators.required, Validators.maxLength(22)])],\n        expirationMonth: ['', Validators.required],\n        expirationYear: ['', Validators.required],\n        ccv: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(4),\n            CardValidator.numbersOnly,\n          ]),\n        ],\n      },\n      {\n        validator: CardValidator.expiration,\n      }\n    );\n  }\n\n  /**\n   * Returns payment card type based on payment card number\n   */\n  public getCardType(ccNum: string): string | null {\n    return PaymentCardService.getCardType(ccNum);\n  }\n\n  /**\n   * Callback function that emits payment card details after user clicks submit, or press enter\n   */\n  public emitSavedCard(): void {\n    const cardDetails: ICardDetails = <CardDetails>this.ccForm.value;\n    this.formSaved.emit(cardDetails);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'paymentCardNumber',\n})\nexport class PaymentCardNumberPipe implements PipeTransform {\n  /**\n   * Transform card number to card format for known numbers\n   */\n  public transform(value: string): string {\n    switch (value.length) {\n      case 15:\n        value = value.replace(/\\b(\\d{4})/, '$1-');\n        value = value.replace(/-(\\d{6})/, '-$1-');\n        return value;\n      case 16:\n        return value.match(/.{4}/g).join('-');\n      default:\n        return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'validThru',\n})\nexport class ValidThruPipe implements PipeTransform {\n  /**\n   * Transform month and year into card format\n   */\n  public transform(value: string): string {\n    return value && value.length === 7 ? value.substr(0, 3) + value.substr(5) : '/';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PaymentCardComponent } from './payment-card.component';\nimport { PaymentCardService } from './service/payment-card.service';\nimport { PaymentCardNumberPipe } from './pipe/payment-card-number/payment-card-number.pipe';\nimport { ValidThruPipe } from './pipe/valid-thru/valid-thru.pipe';\n\n/**\n * Monolithic module that is being bundled and published.\n * Depends only on ReactiveFormsModule and CommonModule.\n */\n@NgModule({\n  imports: [ReactiveFormsModule, CommonModule],\n  declarations: [PaymentCardComponent, PaymentCardNumberPipe, ValidThruPipe],\n  providers: [PaymentCardService],\n  exports: [PaymentCardComponent],\n})\nexport class NgPaymentCardModule {}\n"]}